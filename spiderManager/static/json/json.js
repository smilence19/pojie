window.SINGLE_TAB = "  ";//json收缩图片（+号）window.ImgCollapsed = IMG_PATH + "/json/Collapsed.gif";//json展开图片（-号）window.ImgExpanded = IMG_PATH  + "/json/Expanded.gif";window.QuoteKeys = true;//根据id获取对象function $id(id){ return document.getElementById(id); }//判断对象是否是可以枚举function IsArray(obj) {  return  obj &&          typeof obj === 'object' &&          typeof obj.length === 'number' &&          !(obj.propertyIsEnumerable('length'));}function Process(){//获取缩进变量window.TAB  SetTab();//显示控制  window.IsCollapsible = $id("CollapsibleView").checked;//json数据 if($id("RawJson") != null){     var json = $id("RawJson").value; }else{     var json = jsonData; };//显示网页  var html = "";  try{    if(json == "") json = "\"\"";//将字符串转换为json    var obj = eval("["+json+"]");//将json数据转换为html    html = ProcessObject(obj[0], 0, false, false, false);//将html文件加入到指定的对象内    $id("Canvas").innerHTML = "<PRE class='CodeContainer'>"+html+"</PRE>";  }catch(e){//当json数据转换出错时报警    alert("亲，JSON数据格式不正确");    $id("Canvas").innerHTML = "";  }}window._dateObj = new Date();window._regexpObj = new RegExp();//将json转换为html函数，indent初始化为0，isPropertyContent是否为集合function ProcessObject(obj, indent, addComma, isArray, isPropertyContent){  var html = "";//根据addComma判断是否需要添加逗号。  var comma = (addComma) ? "<span class='Comma'>,</span> " : ""; //判断对象类型  var type = typeof obj;  var clpsHtml ="";//判断对象是否可以枚举  if(IsArray(obj)){    //如果数据为空，不做处理    if(obj.length == 0){      html += GetRow(indent, "<span class='ArrayBrace'>[ ]</span>"+comma, isPropertyContent);    }else{      //设置折叠，依赖变量window.IsCollapsible，折叠函数ExpImgClicked      clpsHtml = window.IsCollapsible ? "<span><img src=\""+window.ImgExpanded+"\" onClick=\"ExpImgClicked(this)\" /></span><span class='collapsible'>" : "";     //添加制表      html += GetRow(indent, "<span class='ArrayBrace'>[</span>"+clpsHtml, isPropertyContent);      //循环执行本函数      for(var i = 0; i < obj.length; i++){        //制表个数自动加一        html += ProcessObject(obj[i], indent + 1, i < (obj.length - 1), true, false);      }      clpsHtml = window.IsCollapsible ? "</span>" : "";      html += GetRow(indent, clpsHtml+"<span class='ArrayBrace'>]</span>"+comma);    }  }else if(type == 'object'){    if (obj == null){        html += FormatLiteral("null", "", comma, indent, isArray, "Null");    }else if (obj.constructor == window._dateObj.constructor) {         html += FormatLiteral("new Date(" + obj.getTime() + ") /*" + obj.toLocaleString()+"*/", "", comma, indent, isArray, "Date");     }else if (obj.constructor == window._regexpObj.constructor) {        html += FormatLiteral("new RegExp(" + obj + ")", "", comma, indent, isArray, "RegExp");    }else{      var numProps = 0;      for(var prop in obj) numProps++;      if(numProps == 0){        html += GetRow(indent, "<span class='ObjectBrace'>{ }</span>"+comma, isPropertyContent);      }else{        clpsHtml = window.IsCollapsible ? "<span><img src=\""+window.ImgExpanded+"\" onClick=\"ExpImgClicked(this)\" /></span><span class='collapsible'>" : "";        html += GetRow(indent, "<span class='ObjectBrace'>{</span>"+clpsHtml, isPropertyContent);        var j = 0;        for(var prop in obj){          var quote = window.QuoteKeys ? "\"" : "";          html += GetRow(indent + 1, "<span class='PropertyName'>"+quote+prop+quote+"</span>: "+ProcessObject(obj[prop], indent + 1, ++j < numProps, false, true));        }        clpsHtml = window.IsCollapsible ? "</span>" : "";        html += GetRow(indent, clpsHtml+"<span class='ObjectBrace'>}</span>"+comma);      }    }//数据类型为数字  }else if(type == 'number'){    html += FormatLiteral(obj, "", comma, indent, isArray, "Number");//数据类型为boolean  }else if(type == 'boolean'){    html += FormatLiteral(obj, "", comma, indent, isArray, "Boolean");//数据类型为函数  }else if(type == 'function'){    if (obj.constructor == window._regexpObj.constructor) {        html += FormatLiteral("new RegExp(" + obj + ")", "", comma, indent, isArray, "RegExp");     }else{        obj = FormatFunction(indent, obj);        html += FormatLiteral(obj, "", comma, indent, isArray, "Function");    }//数据类型为未知  }else if(type == 'undefined'){    html += FormatLiteral("undefined", "", comma, indent, isArray, "Null");//数据类型为其他  }else{    html += FormatLiteral(obj.toString().split("\\").join("\\\\").split('"').join('\\"'), "\"", comma, indent, isArray, "String");  }  return html;}//数据类型为数字函数function FormatLiteral(literal, quote, comma, indent, isArray, style){  if(typeof literal == 'string')    literal = literal.split("<").join("&lt;").split(">").join("&gt;");  var str = "<span class='"+style+"'>"+quote+literal+quote+comma+"</span>";  if(isArray) str = GetRow(indent, str);  return str;}//数据类型为函数的函数function FormatFunction(indent, obj){  var tabs = "";  for(var i = 0; i < indent; i++) tabs += window.TAB;  var funcStrArray = obj.toString().split("\n");  var str = "";  for(var i = 0; i < funcStrArray.length; i++){    str += ((i==0)?"":tabs) + funcStrArray[i] + "\n";  }  return str;}//确定最终制表的个数function GetRow(indent, data, isPropertyContent){  var tabs = "";  for(var i = 0; i < indent && !isPropertyContent; i++) tabs += window.TAB;  if(data != null && data.length > 0 && data.charAt(data.length-1) != "\n")    data = data+"\n";  return tabs+data;                       }function CollapsibleViewClicked(){  $id("CollapsibleViewDetail").style.visibility = $id("CollapsibleView").checked ? "visible" : "hidden";  Process();}function QuoteKeysClicked(){  window.QuoteKeys = $id("QuoteKeys").checked;  Process();}function CollapseAllClicked(){  EnsureIsPopulated();  TraverseChildren($id("Canvas"), function(element){    if(element.className == 'collapsible'){      MakeContentVisible(element, false);    }  }, 0);}function ExpandAllClicked(){  EnsureIsPopulated();  TraverseChildren($id("Canvas"), function(element){    if(element.className == 'collapsible'){      MakeContentVisible(element, true);    }  }, 0);}function MakeContentVisible(element, visible){  var img = element.previousSibling.firstChild;  if(!!img.tagName && img.tagName.toLowerCase() == "img"){    element.style.display = visible ? 'inline' : 'none';    element.previousSibling.firstChild.src = visible ? window.ImgExpanded : window.ImgCollapsed;  }}function TraverseChildren(element, func, depth){  for(var i = 0; i < element.childNodes.length; i++){    TraverseChildren(element.childNodes[i], func, depth + 1);  }  func(element, depth);}//只有这个是默认的显示函数function ExpImgClicked(img){  var container = img.parentNode.nextSibling;  if(!container) return;  var disp = "none";  var src = window.ImgCollapsed;  if(container.style.display == "none"){      disp = "inline";      src = window.ImgExpanded;  }  container.style.display = disp;  img.src = src;}function CollapseLevel(level){  EnsureIsPopulated();  TraverseChildren($id("Canvas"), function(element, depth){    if(element.className == 'collapsible'){      if(depth >= level){        MakeContentVisible(element, false);      }else{        MakeContentVisible(element, true);        }    }  }, 0);}function TabSizeChanged(){  Process();}//缩进量window.TABfunction SetTab(){  var select = $id("TabSize");  window.TAB = MultiplyString(parseInt(select.options[select.selectedIndex].value), window.SINGLE_TAB);}function EnsureIsPopulated(){  if(!$id("Canvas").innerHTML && !!$id("RawJson").value) Process();}function MultiplyString(num, str){  var sb =[];  for(var i = 0; i < num; i++){    sb.push(str);  }  return sb.join("");}function SelectAllClicked(){ if(!!document.selection && !!document.selection.empty) {    document.selection.empty();  } else if(window.getSelection) {    var sel = window.getSelection();    if(sel.removeAllRanges) {      window.getSelection().removeAllRanges();    }  }  var range =       (!!document.body && !!document.body.createTextRange)          ? document.body.createTextRange()          : document.createRange();    if(!!range.selectNode)    range.selectNode($id("Canvas"));  else if(range.moveToElementText)    range.moveToElementText($id("Canvas"));    if(!!range.select)    range.select($id("Canvas"));  else    window.getSelection().addRange(range);}function LinkToJson(){  var val = $id("RawJson").value;  val = escape(val.split('/n').join(' ').split('/r').join(' '));  $id("InvisibleLinkUrl").value = val;  $id("InvisibleLink").submit();}